Python 3.8 is required (for the math.isqrt() method), as well as the Sympy module. 

The file tests.py contains two utility functions:
- selfridge(n, R = 1): 
    chooses Q and D = 1 - 4 * Q * R such that j = (D|n) = -1, returns j = 0 if a D with 1 < GCD(D, n) < n is found.
- mod_mat_pow_1st_col(M11, M12, M21, M22, k, n): 
    given the entries of the matrix M = [[M11, M12], [M21, M22]], an exponent k and a modulus n, evaluates M^k mod n and returns the first column.
- pseudoprimes(primes):
    given a list of integers (obtained from a primality test), checks the primality of each one using the isprime() module.
    If the test returns False, the input is added to the list of pseudoprimes, which is the output.
The other functions are four primality tests:
- lucas(n, P = 1, Q = ''): 
    the Lucas test implemented using the above utility functions. If only the input contains only the integers to be tested, Selfridge method is used.
- double_lucas(n, P = 1, Q = ''):
    the Double Lucas test implemented using the above utility functions. If only the input contains only the integers to be tested, Selfridge method is used.
- generalized_lucas(n, P = 1, Q = '', R = ''):
    the Generalized Lucas test implemented using the above utility functions. If the input contains only the integers to be tested and R, Selfridge method is used.
- generalized_pell(n, X = '', Y = '', D = ''):
    the Generalized Pell test implemented using the above utility functions. If the input contains only the integers to be tested, X and Y, Selfridge method is used.
